name: Laravel CI/CD - management_apk

# 🔹 Workflow berjalan saat push ke branch main
on:
  push:
    branches: [ "main" ]

jobs:
  # =============================
  # 1️⃣ Continuous Integration (CI)
  # =============================
  ci:
    name: Laravel CI
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: management
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql, intl
          coverage: none

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Copy CI Environment
        run: cp .env.ci .env

      - name: Generate App Key
        run: php artisan key:generate --ansi

      - name: Run Migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: management
          DB_USERNAME: root
          DB_PASSWORD: root
        run: php artisan migrate --force

      - name: Run Tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: management
          DB_USERNAME: root
          DB_PASSWORD: root
        run: vendor/bin/phpunit --stop-on-failure --testdox

  # =============================
  # 2️⃣ Continuous Deployment (CD)
  # =============================
  cd:
    name: Deploy to Hostinger
    runs-on: ubuntu-latest
    needs: ci # hanya jalan jika CI sukses

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Hostinger via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 65002 # sesuaikan panel Hostinger
          script: |
            #!/bin/bash
            set -e

            # Masuk ke folder project
            cd ~/public_html

            # Tarik update terbaru dari repo
            if [ ! -d ".git" ]; then
              git clone https://github.com/indopinetmart/management_apk.git .
            else
              git fetch origin main
              git reset --hard origin/main
            fi

            # Copy env production jadi .env
            if [ -f ".env.production" ]; then
              cp .env.production .env
              echo "✅ .env.production dicopy ke .env"
            else
              echo "⚠️ WARNING: .env.production tidak ditemukan!"
            fi

            # Install dependencies PHP
            composer install --no-dev --optimize-autoloader

            # Clear & cache config, routes, view
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan cache:clear

            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Jalankan migration production
            php artisan migrate --force

            # Build asset front-end (Vite)
            npm install
            npm run build

            # Set permission storage & bootstrap/cache
            chmod -R 775 storage bootstrap/cache

            # Restart queue worker jika ada
            if php artisan queue:status > /dev/null 2>&1; then
              php artisan queue:restart
            fi

            echo "✅ Deployment selesai di Hostinger"
