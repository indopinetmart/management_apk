name: Laravel CI/CD - Management Pinetmart Subdomain (Backup + Final)

# Trigger workflow saat ada push ke branch main atau develop
on:
  push:
    branches:
      - main
      - develop

jobs:
  # =============================
  # 1Ô∏è‚É£ Continuous Integration (CI)
  # =============================
  ci:
    name: Laravel CI
    runs-on: ubuntu-latest

    services:
      # Menjalankan MySQL untuk testing local
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: management
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # 1. Checkout kode repo
      - name: Checkout Repo
        uses: actions/checkout@v4

      # 2. Setup PHP versi 8.2 + ekstensi Laravel
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql, intl

      # 3. Install composer dependencies untuk CI
      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      # 4. Copy file environment khusus CI (opsional)
      - name: Copy CI Environment
        run: cp .env.ci .env || echo "CI env file not found, skipping"

      # 5. Generate APP_KEY Laravel
      - name: Generate App Key
        run: php artisan key:generate --ansi

      # 6. Skip migrate & test di CI (akan dilakukan di CD)
      - name: Skip Migrations & Tests
        run: echo "Migrations & tests dilewati, env manual nanti"

  # =============================
  # 2Ô∏è‚É£ Continuous Deployment (CD) dengan backup + permission
  # =============================
  cd:
    name: Deploy Laravel to Hostinger with Backup + Permission
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Deploy via SSH (HTTPS clone + backup + key + permissions)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: ${{ secrets.HOSTINGER_PORT }}
          script: |
            set -e
            echo "üöÄ Mulai deployment Laravel 11 dengan backup dan key..."

            # -------------------------------
            # 1. Definisi folder target & backup
            # -------------------------------
            TARGET=~/domains/management-pinetmart.srf-group.com/public_html
            BACKUP_FOLDER=~/domains/management-pinetmart.srf-group.com/backup_$(date +%Y%m%d_%H%M%S)

            # -------------------------------
            # 2. Backup folder Laravel lama jika ada
            # -------------------------------
            if [ -d "$TARGET" ] && [ "$(ls -A $TARGET)" ]; then
              echo "üíæ Backup folder lama ke $BACKUP_FOLDER"
              mkdir -p $BACKUP_FOLDER
              cp -r $TARGET/* $BACKUP_FOLDER/
            else
              echo "Folder lama kosong, tidak perlu backup"
            fi

            # -------------------------------
            # 3. Pastikan folder target ada
            # -------------------------------
            mkdir -p $TARGET
            cd $TARGET

            # -------------------------------
            # 4. Clone atau update repo Laravel via HTTPS + GitHub PAT
            # -------------------------------
            if [ ! -d ".git" ]; then
              echo "üì• Clone repo Laravel baru"
              git clone https://${GITHUB_PAT}@github.com/indopinetmart/management_apk.git .
            else
              echo "üîÑ Update repo Laravel"
              git fetch origin main
              git reset --hard origin/main
            fi

            # -------------------------------
            # 5. Copy .env jika belum ada
            # -------------------------------
            if [ ! -f ".env" ]; then
              if [ -f ".env.example" ]; then
                cp .env.example .env
                echo ".env dibuat dari .env.example"
              else
                echo "‚ö†Ô∏è .env tidak ditemukan, harap buat manual"
              fi
            fi

            # -------------------------------
            # 6. Generate APP_KEY jika belum ada
            # -------------------------------
            if ! grep -q "APP_KEY=" .env || [ -z "$(grep APP_KEY .env | cut -d '=' -f2)" ]; then
              echo "üîë Generate APP_KEY Laravel"
              php artisan key:generate --ansi
            fi

            # -------------------------------
            # 7. Install composer dependencies
            # -------------------------------
            echo "üîß Install composer dependencies"
            composer install --no-interaction --prefer-dist --optimize-autoloader || composer install

            # -------------------------------
            # 8. Jalankan migrate otomatis
            # -------------------------------
            echo "üóÑÔ∏è Jalankan migrate otomatis"
            php artisan migrate --force

            # -------------------------------
            # 9. Cache Laravel (config, route, view)
            # -------------------------------
            echo "‚ö° Cache config, route, view"
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # -------------------------------
            # 10. Set permission folder penting
            # -------------------------------
            echo "üîí Set permission folder storage, bootstrap/cache, public"
            chmod -R 755 storage bootstrap/cache public

            echo "‚úÖ Deployment selesai!"
            echo "üíæ Backup lama disimpan di $BACKUP_FOLDER"
            echo "üîë APP_KEY sudah dicek / dibuat otomatis"
