name: Laravel CI/CD - management_apk

on:
  push:
    branches: [ "main" ]

jobs:
  # =============================
  # 1️⃣ Continuous Integration (CI)
  # =============================
  ci:
    name: Laravel CI + Build Frontend
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: management
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql, intl
          coverage: none

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Copy CI Environment
        run: cp .env.ci .env

      - name: Generate App Key
        run: php artisan key:generate --ansi

      - name: Run Migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: management
          DB_USERNAME: root
          DB_PASSWORD: root
        run: php artisan migrate --force

      - name: Run Tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: management
          DB_USERNAME: root
          DB_PASSWORD: root
        run: vendor/bin/phpunit --stop-on-failure --testdox

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install NPM Dependencies
        run: npm install

      - name: Build Vite Assets
        run: npm run build

      - name: Archive build folder
        uses: actions/upload-artifact@v4
        with:
          name: public-build
          path: public/build

  # =============================
  # 2️⃣ Continuous Deployment (CD)
  # =============================
  cd:
    name: Deploy to Hostinger via SSH + Rsync
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: public-build
          path: ./public_build

      - name: Deploy to Hostinger via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 145.223.108.62
          username: u943606636
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: 65002
          script: |
            #!/bin/bash
            set -e

            # 🔹 Pastikan folder project ada
            mkdir -p ~/public_html/management_apk
            cd ~/public_html/management_apk

            # 🔹 Git pull / clone otomatis
            if [ ! -d ".git" ]; then
              git clone https://github.com/indopinetmart/management_apk.git .
            else
              git fetch origin main
              git reset --hard origin/main
            fi

            # 🔹 Install dependencies Laravel
            composer install --no-dev --optimize-autoloader

            # 🔹 Clear & cache Laravel
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear
            php artisan cache:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # 🔹 Set permission folder penting
            chmod -R 775 storage bootstrap/cache

            # 🔹 Restart queue worker jika ada
            if php artisan queue:status > /dev/null 2>&1; then
              php artisan queue:restart
            fi

      - name: Upload public/build to Hostinger via Rsync
        run: |
          rsync -avz --delete -e "ssh -p 65002 -i ${{ secrets.HOSTINGER_SSH_KEY }}" \
          ./public_build/ u943606636@145.223.108.62:~/public_html/management_apk/public/build
