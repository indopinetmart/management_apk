name: Laravel CI/CD - Management Pinetmart (Zero Downtime + Backup + Cleanup)

on:
  push:
    branches:
      - main
      - develop

jobs:
  # =============================
  # 1️⃣ Continuous Integration (CI)
  # =============================
  ci:
    name: Laravel CI
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: management
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql, intl

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Copy CI Environment
        run: cp .env.ci .env || echo "CI env file not found, skipping"

      - name: Generate App Key
        run: php artisan key:generate --ansi

      - name: Skip Migrations & Tests
        run: echo "Migrations & tests dilewati di CI"

  # =============================
  # 2️⃣ Continuous Deployment (CD) Zero Downtime + Backup + Cleanup
  # =============================
  cd:
    name: Deploy Laravel Zero Downtime (Hostinger)
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.HOSTINGER_SSH_KEY }}
          port: ${{ secrets.HOSTINGER_PORT }}
          script: |
            set -e
            echo "🚀 Zero Downtime Deploy Laravel..."

            # -------------------------------
            # 1. Tentukan folder utama
            # -------------------------------
            APP_DIR=~/domains/management-pinetmart.srf-group.com
            WEB_ROOT=$APP_DIR/public_html
            RELEASES_DIR=$APP_DIR/releases
            RELEASE_NAME=$(date +%Y%m%d_%H%M%S)
            NEW_RELEASE=$RELEASES_DIR/$RELEASE_NAME
            BACKUP_FOLDER=$APP_DIR/backup_$RELEASE_NAME

            # -------------------------------
            # 2. Backup sebelum deploy
            # -------------------------------
            echo "💾 Backup storage & public_html"
            mkdir -p $BACKUP_FOLDER
            cp -r $APP_DIR/storage $BACKUP_FOLDER/storage || echo "⚠️ Storage kosong"
            cp -r $WEB_ROOT $BACKUP_FOLDER/public || echo "⚠️ Public kosong"

            # -------------------------------
            # 3. Buat release baru
            # -------------------------------
            mkdir -p $NEW_RELEASE
            git clone https://${GITHUB_PAT}@github.com/indopinetmart/management_apk.git $NEW_RELEASE

            # -------------------------------
            # 4. Shared resource (env & storage)
            # -------------------------------
            echo "📄 Pasang .env dari secrets"
            echo "${{ secrets.ENV_PRODUCTION }}" > $APP_DIR/.env

            ln -sfn $APP_DIR/.env $NEW_RELEASE/.env
            ln -sfn $APP_DIR/storage $NEW_RELEASE/storage

            # -------------------------------
            # 5. Install dependencies + migrate + cache
            # -------------------------------
            cd $NEW_RELEASE
            composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # -------------------------------
            # 6. Update symlink "current" ke release baru
            # -------------------------------
            ln -sfn $NEW_RELEASE $APP_DIR/current

            # -------------------------------
            # 7. Update public_html agar load current/
            # -------------------------------
            cp $NEW_RELEASE/public/index.php $WEB_ROOT/index.php
            cp $NEW_RELEASE/public/.htaccess $WEB_ROOT/.htaccess
            sed -i "s|../vendor/autoload.php|../current/vendor/autoload.php|" $WEB_ROOT/index.php
            sed -i "s|../bootstrap/app.php|../current/bootstrap/app.php|" $WEB_ROOT/index.php

            # -------------------------------
            # 8. Set permission
            # -------------------------------
            chmod -R 755 $NEW_RELEASE/storage $NEW_RELEASE/bootstrap/cache $WEB_ROOT
            chmod 644 $APP_DIR/.env $WEB_ROOT/index.php $WEB_ROOT/.htaccess

            # -------------------------------
            # 9. Cleanup file sensitif
            # -------------------------------
            rm -rf $NEW_RELEASE/.git
            rm -f $NEW_RELEASE/phpunit.xml $NEW_RELEASE/README.md $NEW_RELEASE/LICENSE

            # -------------------------------
            # 🔟 Cleanup release lama (keep 5 terakhir)
            # -------------------------------
            echo "🧹 Hapus release lama, simpan 5 terakhir"
            cd $RELEASES_DIR
            ls -1t | tail -n +3 | xargs rm -rf || true

            echo "✅ Deployment selesai tanpa downtime!"
            echo "📂 Release aktif: $RELEASE_NAME"
            echo "💾 Backup: $BACKUP_FOLDER"
